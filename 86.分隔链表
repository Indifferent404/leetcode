/*
  思路:构建两个链表的头，遍历链表，如果值小于x，则接在第一个链表后面；如果值大于等于x，则接在第二个链表的后面。最后将两个链表接在一起。
*/
class Solution {
    public ListNode partition(ListNode head, int x) {
        //链表小于x的头
        ListNode dummy1 = new ListNode(0) ;
        //链表大于等于x的头
        ListNode dummy2 = new ListNode(0) ;
        ListNode pre = dummy1 ;
        ListNode last = dummy2 ;
        while(head != null){
            if(head.val < x){
                pre.next = head ;
                pre = pre.next ;
            }
            else{
                last.next = head ;
                last = last.next ;
            }
            head = head.next ;

        }
        //使链表最后一个ListNode的下一个指向为null
        last.next = null ;
        pre.next = dummy2.next ;
        return dummy1.next ;

    }
}
